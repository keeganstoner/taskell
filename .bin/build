# stop on any errors
set -e

#----------------------------------------------------------------------------

ghcVersion="9.0.1"
workDir=".stack-build"
branch=$(git rev-parse --abbrev-ref HEAD)

#----------------------------------------------------------------------------

if [ $branch != "master" ]; then
    echo "\033[0;31mMust be on master branch\033[0m"
    exit
fi

#----------------------------------------------------------------------------

if [ ! -d "$workDir" ]; then
    echo "\033[0;31mMust be run in project root\033[0m"
    exit
fi

if [ -z "$1" ]; then
    echo "\033[0;31mVersion number required\033[0m"
    exit
fi

#----------------------------------------------------------------------------

# stash any changes
git stash

#----------------------------------------------------------------------------

# check cabal build works
cabal build

if [ $? -ne 0 ]
then
    git stash pop
    echo "\033[0;31mCabal build failed\033[0m"
    exit
fi

#----------------------------------------------------------------------------

# make sure latest changes pushed to github
git push --all && git push --tags

#----------------------------------------------------------------------------

# clean out previous build attempts
rm -rf "$workDir/install"

# sort out releases directory
rm -rf "releases/$1/taskell"
mkdir -p "releases/$1/taskell"

#----------------------------------------------------------------------------

# Mac
stack build --work-dir "$workDir" --ghc-options -O3

strip "$(stack path --local-install-root --work-dir $workDir)/bin/taskell" # remove tokens

tar -czvf "releases/$1/taskell-$1_x86-64-mac.tar.gz" --directory="$(stack path --local-install-root --work-dir $workDir)/bin" "taskell"

#----------------------------------------------------------------------------


# Linux
docker pull "haskell:$ghcVersion"
stack build --work-dir "$workDir" --docker --docker-image "haskell:$ghcVersion" --ghc-options -O3

LINUX_FULL_PATH=$(find "$workDir" -path "*linux*" -and -path "*bin/taskell")
LINUX_PATH=${LINUX_FULL_PATH%"taskell"}

tar -czvf "releases/$1/taskell-$1_x86-64-linux.tar.gz"  --directory="$LINUX_PATH" "taskell"

mkdir -p "releases/$1/taskell/DEBIAN"
mkdir -p "releases/$1/taskell/usr/local/bin"

cp "$LINUX_PATH/taskell" "releases/$1/taskell/usr/local/bin"

echo "Package: taskell
Version: $1
Maintainer: Mark Wales
Architecture: amd64
Description: A command line task manager written in Haskell" > "releases/$1/taskell/DEBIAN/control"

docker run -v "$PWD/releases/$1":/usr/src/app -w /usr/src/app debian dpkg-deb --build taskell

mv "releases/$1/taskell.deb" "releases/$1/taskell-$1_x86-64-linux.deb"

#----------------------------------------------------------------------------

# Release Template
rm -rf "releases/$1/taskell"

open "releases/$1"
open "https://github.com/smallhadroncollider/taskell/releases/new"

echo "
-

### Installation

- Mac (Homebrew): \`brew install taskell\`
- Mac/Linux: download binary and place it in a directory in your \`\$PATH\` (e.g. \`/usr/local/bin\`)
- Debian (including Ubuntu): download the \`.deb\` file and run \`dpkg -i taskell-$1_x86-64-linux.deb\`. You may also need to install the \`libtinfo5\` package (\`sudo apt install libtinfo5\`)
- Fedora: Run \`sudo dnf install ncurses-compat-libs\` then download and run binary as described above" | pbcopy

echo "Release info copied to clipboard"

#----------------------------------------------------------------------------

# add to Hackage
stack upload .

#----------------------------------------------------------------------------

# Homebrew Pull Request
brew update
brew bump-formula-pr --url="https://github.com/smallhadroncollider/taskell/archive/$1.tar.gz" taskell

#----------------------------------------------------------------------------

# unstash
git stash pop
